#
# Copyright (c) 2022-2023, Jes√∫s Daniel Colmenares Oviedo <DtxdF@disroot.org>
# All rights reserved.
#
# Redistribution and use in source and binary forms, with or without
# modification, are permitted provided that the following conditions are met:
#
# * Redistributions of source code must retain the above copyright notice, this
#   list of conditions and the following disclaimer.
#
# * Redistributions in binary form must reproduce the above copyright notice,
#   this list of conditions and the following disclaimer in the documentation
#   and/or other materials provided with the distribution.
#
# * Neither the name of the copyright holder nor the names of its
#   contributors may be used to endorse or promote products derived from
#   this software without specific prior written permission.
#
# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
# AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
# IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
# DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE
# FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
# DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
# SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
# CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,
# OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
# OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.

lib_load "${LIBDIR}/log"
lib_load "${LIBDIR}/sysexits"

lib_strlen()
{
	local _str

	_str="$1"
	if [ -z "${_str}" ]; then
		lib_err ${EX_USAGE} "usage: lib_strlen string"
	fi

	printf "%s" "${_str}" | wc -c | tr -d ' '
}

lib_countfiles()
{
	local _dir

	_dir="$1"
	if [ -z "${_dir}" ]; then
		lib_err ${EX_USAGE} "usage: lib_countfiles directory"
	fi

	ls -A "${_dir}" | wc -l | tr -d ' '
}

lib_getnro()
{
	local _dir="$1"

	if [ -z "${_dir}" ]; then
		lib_err ${EX_USAGE} "usage: lib_getnro directory"
	fi

	local _nro=`ls -A "${_dir}" | sort -n | tail -n 1`
	if [ -z "${_nro}" ]; then
		_nro=0
	else
		_nro=$((_nro+1))
	fi

	echo "${_nro}"
}

lib_humanize_number()
{
	local number="$1"

	if [ -z "${number}" ]; then
		lib_err ${EX_USAGE} "usage: lib_humanize_number number"
	fi

	local kib=1024
	local mib=1048576
	local gib=1073741824
	local tib=1099511627776
	local pib=1125899906842624
	local eib=1152921504606846976

	local unit=
	local result=
	
	local errlevel

	local initial_test
	initial_test=`test ${number} -lt ${kib} 2> /dev/null`

	errlevel=$?

	if [ ${errlevel} -eq 2 ]; then
		return 1
	fi

	if [ ${errlevel} -eq 0 ]; then
		result="${number}"
		unit="B"
	elif [ ${number} -ge ${kib} -a ${number} -lt ${mib} ]; then
		result=`echo "${number} / ${kib}" | bc -S 2`
		unit="KiB"
	elif [ ${number} -ge ${mib} -a ${number} -lt ${gib} ]; then
		result=`echo "${number} / ${mib}" | bc -S 2`
		unit="MiB"
	elif [ ${number} -ge ${gib} -a ${number} -lt ${tib} ]; then
		result=`echo "${number} / ${gib}" | bc -S 2`
		unit="GiB"
	elif [ ${number} -ge ${tib} -a ${number} -lt ${pib} ]; then
		result=`echo "${number} / ${tib}" | bc -S 2`
		unit="TiB"
	elif [ ${number} -ge ${pib} -a ${number} -lt ${eib} ]; then
		result=`echo "${number} / ${pib}" | bc -S 2`
		unit="PiB"
	else
		result=`echo "${number} / ${eib}" | bc -S 2`
		unit="EiB"
	fi

	echo "${result}${unit}"

	return 0
}
